jobs:
  install_and_test:
    parameters:
      install-version:
        type: string
        default: "7.2"
      symfony-version:
        type: string
        default: "v5.2.99"
    docker:
      # Ubuntu 18.04 base image
      - image: 'cimg/base:2020.12-18.04'
    steps:
      - php/install-php:
          version: '<<parameters.install-version>>'
      # Minimal packages for symfony to run with xdebug
      - run: sudo apt install php<<parameters.install-version>>-xdebug php<<parameters.install-version>>-xml
      # A larger install set of packages
      - run:
          command: |
              sudo apt install \
                php<<parameters.install-version>>-phpdbg \
                php<<parameters.install-version>>-dev \
                php<<parameters.install-version>>-fpm \
                php<<parameters.install-version>>-gd \
                php<<parameters.install-version>>-intl \
                php<<parameters.install-version>>-mbstring \
                php<<parameters.install-version>>-mysql \
                php<<parameters.install-version>>-opcache \
                php<<parameters.install-version>>-readline \
                php<<parameters.install-version>>-sqlite3 \
                php<<parameters.install-version>>-soap \
                php<<parameters.install-version>>-xmlrpc \
                php<<parameters.install-version>>-zip
      # Checkout this repository
      - checkout
      # Add xdebug.ini with xdebug.var_display_max_depth = -1
      - run: sudo cp ~/project/xdebug.ini /etc/php/<<parameters.install-version>>/mods-available/xdebug.ini
      - php/install-composer:
          install-version: 2.0.8
      - run: XDEBUG_MODE=off composer create-project symfony/website-skeleton:"<<parameters.symfony-version>>" symfony
      # Limit memory to 64M so that cache:clear will crash more quickly or timeout after 15s
      # With only php-xml module loaded the interpreter is quite lightweight and
      # will not run out of memory for some time otherwise and generate a huge traceback
      - run:
          command: |
             cd symfony
             APP_ENV=dev APP_RUNTIME_ENV=dev timeout 15s php<<parameters.install-version>> -d memory_limit=64M bin/console cache:clear
orbs:
  php: circleci/php@1.1.0
version: 2.1

workflows:
  install:
    jobs:
      - install_and_test:
          name: "php-7.2 v5.2.99"
          install-version: "7.2"
          symfony-version: "v5.2.99"
#      - install_and_test:
#          name: "php-7.2 5.2.x@dev"
#          install-version: "7.2"
#          symfony-version: "5.2.x@dev"
#      - install_and_test:
#          name: "php-7.4 v5.2.99"
#          install-version: "7.4"
#          symfony-version: "v5.2.99"
#      - install_and_test:
#          name: "php-7.4 5.2.x@dev"
#          install-version: "7.4"
#          symfony-version: "5.2.x@dev"



